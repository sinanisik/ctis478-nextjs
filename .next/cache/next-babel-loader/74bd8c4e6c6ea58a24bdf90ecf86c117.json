{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Layout from \"../../components/Layout/Layout\";\nimport styles from \"./Country.module.css\";\n\nconst Country = ({\n  country\n}) => {\n  return /*#__PURE__*/_jsx(Layout, {\n    title: country.name,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: styles.flag,\n        children: /*#__PURE__*/_jsx(\"img\", {\n          src: country.flag,\n          alt: country.name\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.countryName,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: styles.value,\n          children: country.name\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.field,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: styles.label,\n          children: \"Region\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.value,\n          children: country.region\n        })]\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.field,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: styles.label,\n          children: \"Population\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.value,\n          children: country.population\n        })]\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.field,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: styles.label,\n          children: \"Area\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.value,\n          children: country.area\n        })]\n      })]\n    })\n  });\n};\n\nexport default Country; // pre-render at request time. If the population is updated every second, every minite or every day.\n// This data does not need to be updated that often.\n// Time to first byte will be slower than getStaticProps.\n// Server must compute the result on every request\n// export const getServerSideProps = async ({ params }) => {\n//   const res = await fetch(\n//     `https://restcountries.eu/rest/v2/alpha/${params.id}`\n//   );\n//   const country = await res.json();\n//   return {\n//     props: {\n//       country: country,\n//     },\n//   };\n// };\n\nexport const getStaticPaths = async () => {\n  const res = await fetch(\"https://restcountries.eu/rest/v2/all\");\n  const countries = await res.json();\n  const paths = countries.map(country => {\n    return {\n      params: {\n        id: country.alpha3Code\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: false // return 404 not found for every other route\n\n  };\n}; // To be able to use getStaticProps with dynamic routes we should use getStaticPaths function.\n// We should define a list of paths that have to be rendered to HTML at build time.\n\nexport const getStaticProps = async ({\n  params\n}) => {\n  const res = await fetch(`https://restcountries.eu/rest/v2/alpha/${params.id}`);\n  const country = await res.json();\n  return {\n    props: {\n      country: country\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}